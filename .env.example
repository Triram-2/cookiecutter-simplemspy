# .env.example
# Пример файла с переменными окружения.
# Скопируйте этот файл в .env и замените значения на свои.
# НЕ КОММИТЬТЕ .env файл в систему контроля версий, если он содержит чувствительные данные!

# --- Настройки приложения (Uvicorn и общие) ---
APP_ENV="dev" # Окружение: dev, prod, test
APP_HOST="0.0.0.0"
APP_PORT="8000" # Порт, на котором приложение будет доступно на хосте
APP_RELOAD="True" # Включить автоперезагрузку для Uvicorn (True/False)

# --- Настройки базы данных ---
# DB_TYPE: Тип базы данных. Возможные значения: "POSTGRESQL" или "SQLITE".
DB_TYPE="POSTGRESQL"

# Настройки для PostgreSQL (используются, если DB_TYPE="POSTGRESQL")
DB_HOST="db" # Имя сервиса PostgreSQL в docker-compose.yml. Для локального запуска измените на localhost.
DB_PORT="5432"
DB_USER="postgres_user" # Замените на свое имя пользователя
DB_PASSWORD="postgres_password" # Замените на свой пароль
DB_NAME="app_db" # Замените на свое имя базы данных

# Настройки для SQLite (используются, если DB_TYPE="SQLITE")
# Путь к файлу SQLite. В Dockerfile есть ENV APP_SQLITE_DB_PATH="/app/data/db/main.sqlite"
# Это значение может быть использовано приложением, если DB_SQLITE_FILE не задан здесь.
# Для docker-compose, том монтирует ./data/db хоста в /app/data/db контейнера.
DB_SQLITE_FILE="/app/data/db/main.sqlite" # Путь внутри контейнера (или на хосте, если запускается без Docker)
                                        # Если запускаете локально без Docker, укажите, например: data/db/main.sqlite

# --- Настройки логирования (примеры, если они настраиваются через переменные окружения) ---
# LOG_LEVEL_CONSOLE="INFO" # Уровень логирования для консоли (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL_FILE_INFO="INFO" # Уровень для info-файла
# LOG_LEVEL_FILE_ERROR="ERROR" # Уровень для error-файла
# LOG_PATH="/app/logs" # Путь для файлов логов внутри контейнера (если отличается от дефолта)

# --- Другие настройки ---
# SECRET_KEY="your_very_secret_key_here" # Пример для JWT или других нужд безопасности
# API_V1_PREFIX="/api/v1" # Если префикс API настраивается

# Переменные для Docker Compose (если они используются для чего-то кроме уже перечисленного)
# COMPOSE_PROJECT_NAME="my_app_project" # Имя проекта для Docker Compose
